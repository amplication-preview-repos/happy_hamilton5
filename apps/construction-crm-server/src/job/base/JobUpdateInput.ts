/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AssignmentUpdateManyWithoutJobsInput } from "./AssignmentUpdateManyWithoutJobsInput";
import {
  ValidateNested,
  IsOptional,
  IsString,
  IsNumber,
} from "class-validator";
import { Type } from "class-transformer";
import { CustomerWhereUniqueInput } from "../../customer/base/CustomerWhereUniqueInput";
import { InvoiceUpdateManyWithoutJobsInput } from "./InvoiceUpdateManyWithoutJobsInput";

@InputType()
class JobUpdateInput {
  @ApiProperty({
    required: false,
    type: () => AssignmentUpdateManyWithoutJobsInput,
  })
  @ValidateNested()
  @Type(() => AssignmentUpdateManyWithoutJobsInput)
  @IsOptional()
  @Field(() => AssignmentUpdateManyWithoutJobsInput, {
    nullable: true,
  })
  assignments?: AssignmentUpdateManyWithoutJobsInput;

  @ApiProperty({
    required: false,
    type: () => CustomerWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CustomerWhereUniqueInput)
  @IsOptional()
  @Field(() => CustomerWhereUniqueInput, {
    nullable: true,
  })
  customer?: CustomerWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  invoicedMaterials?: string | null;

  @ApiProperty({
    required: false,
    type: () => InvoiceUpdateManyWithoutJobsInput,
  })
  @ValidateNested()
  @Type(() => InvoiceUpdateManyWithoutJobsInput)
  @IsOptional()
  @Field(() => InvoiceUpdateManyWithoutJobsInput, {
    nullable: true,
  })
  invoices?: InvoiceUpdateManyWithoutJobsInput;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  quote?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  siteLocation?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  totalEstimate?: number | null;
}

export { JobUpdateInput as JobUpdateInput };
