datasource db {
  provider = "sqlserver"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Job {
  assignments       Assignment[]
  createdAt         DateTime     @default(now())
  customer          Customer?    @relation(fields: [customerId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  customerId        String?
  id                String       @id @default(cuid())
  invoicedMaterials String?
  invoices          Invoice[]
  quote             Float?
  siteLocation      String?
  totalEstimate     Float?
  updatedAt         DateTime     @updatedAt
}

model Employee {
  assignments Assignment[]
  createdAt   DateTime     @default(now())
  id          String       @id @default(cuid())
  name        String?
  phone       String?
  position    String?
  updatedAt   DateTime     @updatedAt
}

model Assignment {
  createdAt  DateTime  @default(now())
  employee   Employee? @relation(fields: [employeeId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  employeeId String?
  endDate    DateTime?
  id         String    @id @default(cuid())
  job        Job?      @relation(fields: [jobId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  jobId      String?
  startDate  DateTime?
  updatedAt  DateTime  @updatedAt
}

model User {
  createdAt DateTime @default(now())
  email     String?  @unique
  firstName String?
  id        String   @id @default(cuid())
  lastName  String?
  password  String
  roles     Json
  updatedAt DateTime @updatedAt
  username  String   @unique
}

model Admin {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  password  String?
  updatedAt DateTime @updatedAt
  username  String?
}

model InvoiceItem {
  createdAt       DateTime  @default(now())
  date            DateTime?
  id              String    @id @default(cuid())
  invoice         Invoice?  @relation(fields: [invoiceId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  invoiceId       String?
  itemDescription String?
  itemName        String?
  quantity        Int?
  updatedAt       DateTime  @updatedAt
}

model Invoice {
  createdAt    DateTime      @default(now())
  id           String        @id @default(cuid())
  invoiceItems InvoiceItem[]
  job          Job?          @relation(fields: [jobId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  jobId        String?
  uniqueId     String?
  updatedAt    DateTime      @updatedAt
}

model Customer {
  contactNumber     String?
  createdAt         DateTime  @default(now())
  customerName      String?
  emailAddress      String?
  id                String    @id @default(cuid())
  jobs              Job[]
  lastContactedDate DateTime?
  updatedAt         DateTime  @updatedAt
}
